name: Publish NuGet Package

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Publish NuGet Package

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Get latest version from NuGet
        id: get-version
        run: |
          PACKAGE_ID="WC.Library.Web"
          dotnet tool install --global dotnet-outdated
          PACKAGE_VERSION=$(dotnet outdated --check-published --package $PACKAGE_ID | grep -oP "(?<=\s$PACKAGE_ID\s).+" | head -n 1)
          
          if [ -z "$PACKAGE_VERSION" ]; then
            echo "No versions found on NuGet. Starting from 1.0.0."
            NEW_VERSION="1.0.0"
          else
            echo "Latest version: $PACKAGE_VERSION"
            NEW_VERSION=$(echo $PACKAGE_VERSION | awk -F. -v OFS=. '{$NF++; print}')
          fi
          
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update version in csproj
        run: |
          sed -i "s/<Version>.*<\/Version>/<Version>${{ env.version }}<\/Version>/" src/WC.Library.Web/WC.Library.Web.csproj

      - name: Build and pack
        run: dotnet pack src/WC.Library.Web/WC.Library.Web.csproj -c Release -o ./out

      - name: Publish package to NuGet
        run: dotnet nuget push ./out/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
